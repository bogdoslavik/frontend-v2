name: Checks

on:
  - pull_request

env:
  VUE_APP_FATHOM_SITE_ID: xxx

jobs:
  Version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Get package.json version
        run: echo PACKAGE_VERSION=$(node -p -e "require('./package.json').version") >> $GITHUB_ENV
      - name: Get package-lock.json version
        run: echo PACKAGE_LOCK_VERSION=$(node -p -e "require('./package-lock.json').version") >> $GITHUB_ENV
      - name: Check lockfile sync
        if: env.PACKAGE_VERSION != env.PACKAGE_LOCK_VERSION
        run: |
          echo "package-lock.json out of sync"
          exit 1
      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          diff-search: true
      - name: Log when changed
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'
      - name: Fail if version not updated and PR base is master
        if: steps.check.outputs.changed == 'false' && github.event.pull_request.base.ref == 'master'
        run: exit 1

  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install deps
        run: npm install -g npm@7 && npm ci
      - name: Run build
        run: npm run build

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install deps
        run: npm install -g npm@7 && npm ci
      - name: Run lint
        run: npm run lint
      - name: Run prettier
        run: npm run prettier
      - name: Run stylelint
        run: npm run stylelint

  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install deps
        run: npm install -g npm@7 && npm ci
      - name: Run typecheck
        run: npm run typecheck
      - name: Run tests
        run: npm run test:unit

  E2E:
    # Only run e2e tests, if other jobs are successful
    needs: [Build, Lint, Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install deps
        run: npm install -g npm@7 && npm ci
      - name: Start app in background
        # Start app using Goerli testnet
        run: VUE_APP_NETWORK=5 npm run serve &
      - name: Checkout cypress app
        uses: actions/checkout@v2
        with:
          repository: balancer-labs/frontend-e2e
          path: e2e
      - name: Run Synpress
        uses: cypress-io/github-action@v4
        env:
          SECRET_WORDS: ${{secrets.TEST_WALLET_SECRET_WORDS}}
          NETWORK_NAME: goerli
          CYPRESS_WALLET_ACCOUNT_NUMBER: 1
        with:
          working-directory: e2e
          # wait for the app to start
          wait-on: 'http://localhost:8080'
          # Use custom test command for synpress
          command: npm run synpress:ci
      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e_test_report
          path: e2e/synpress/report
          # Keep the test report artifact for 5 days
          retention-days: 5
